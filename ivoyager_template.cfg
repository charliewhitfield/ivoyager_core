; File 'res://addons/ivoyager_core/ivoyager_template.cfg' is a template!
; The active config file is loaded from the project level file at path
; 'res://ivoyager.cfg'. This file is created automatically from the template
; if it does not exist already.
;
; Edit res://ivoyager.cfg to:
;   - replace, add or remove autoload singletons
;   - modify project settings in IVGlobal
;   - replace, add, remove or subclass core classes in IVInitializer
;
; For changes to have effect, you can disable and re-enable the plugin.


[autoloads]

; See base autoloads in 'ivoyager_core/ivoyager_base.cfg'.
; Set path value to "" to skip an existing autoload.

merge_overwrite_autoload_paths={}

[class_presets]

; See class_preset_groups in 'res://addons/ivoyager_core/ivoyager_base.cfg'.
; If setting below is true, listed objects won't be instantiated by
; IVInitializer. This is safer than removing individual classes (to do that
; you need to investigate class dependencies).

remove_save_load_system=false
remove_camera_system=false

; *****************************************************************************
;
; All sections below modify properties or container values in 'IVGlobal' and
; 'IVInitializer' singletons (see files in 'addons/ivoyager_core/singletons/').
;
; As an alternative, you can modify the singleton values directly using an
; initiallizer GDScript. This approach may be less error-prone and is necessary
; for adding classes by name rather than path. But it's your choice.
;
; Removing or replacing classes in IVInitializer can break the program. It is
; always ok to replace with a subclass. (See comments in IVInitializer.)
;
; *****************************************************************************

[global_overrides]

project_name="MyProject"

[global_array_erases]

; name_of_array=[erase_value1, erase_value2, ...]

[global_array_appends]

; name_of_array=[append_value1, append_value2, ...]

[global_dictionary_merge_overwrite_erase_nulls]

; name_of_dictionary={} # will merge-overwrite, then erase keys w/ null value

[initializer_overrides]

init_delay=5

[initializer_dictionary_merge_overwrite_erase_nulls]

; name_of_dictionary={} # will merge-overwrite, then erase keys w/ null value

